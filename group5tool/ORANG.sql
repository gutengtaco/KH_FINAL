-- 시퀀스
DROP SEQUENCE SEQ_ENRNO;
DROP SEQUENCE SEQ_MENUNO;
DROP SEQUENCE SEQ_COMNO;
DROP SEQUENCE SEQ_GNO;
DROP SEQUENCE SEQ_INGNO;
DROP SEQUENCE SEQ_INDENTNO;
DROP SEQUENCE SEQ_STOCKNO;
DROP SEQUENCE SEQ_FLOWNO;
DROP SEQUENCE SEQ_SALESNO;
DROP SEQUENCE SEQ_PAYNO;
DROP SEQUENCE SEQ_INQNO;

DROP TABLE COMBINATION; 
DROP TABLE FLOW;
DROP TABLE INDENT;
DROP TABLE STOCK;
DROP TABLE SALES;
DROP TABLE PAYMENT;
DROP TABLE INQUERY;
DROP TABLE GREDIENT;
DROP TABLE INGREDIENT;
DROP TABLE STORE;
DROP TABLE ENROLL;
DROP TABLE MENU;


CREATE SEQUENCE SEQ_ENRNO
START WITH 1
INCREMENT BY 1
MAXVALUE 5000
NOCYCLE
NOCACHE;

CREATE SEQUENCE SEQ_MENUNO
START WITH 1
INCREMENT BY 1
MAXVALUE 5000
NOCYCLE
NOCACHE;

CREATE SEQUENCE SEQ_COMNO
START WITH 1
INCREMENT BY 1
MAXVALUE 5000
NOCYCLE
NOCACHE;

CREATE SEQUENCE SEQ_INGNO
START WITH 1
INCREMENT BY 1
MAXVALUE 5000
NOCYCLE
NOCACHE;

CREATE SEQUENCE SEQ_INDENTNO
START WITH 1
INCREMENT BY 1
MAXVALUE 5000
NOCYCLE
NOCACHE;

CREATE SEQUENCE SEQ_STOCKNO
START WITH 1
INCREMENT BY 1
MAXVALUE 5000
NOCYCLE
NOCACHE;

CREATE SEQUENCE SEQ_FLOWNO
START WITH 1
INCREMENT BY 1
MAXVALUE 5000
NOCYCLE
NOCACHE;

CREATE SEQUENCE SEQ_SALESNO
START WITH 1
INCREMENT BY 1
MAXVALUE 5000
NOCYCLE
NOCACHE;

CREATE SEQUENCE SEQ_PAYNO
START WITH 1
INCREMENT BY 1
MAXVALUE 5000
NOCYCLE
NOCACHE;

CREATE SEQUENCE SEQ_INQNO
START WITH 1
INCREMENT BY 1
MAXVALUE 5000
NOCYCLE
NOCACHE;

-- 테이블
CREATE TABLE ENROLL(
    ENR_NO NUMBER PRIMARY KEY NOT NULL,               -- 신청번호   
    STORE_NAME VARCHAR2(15) NOT NULL,                    -- 점주이름 
    ENROLL_ADD VARCHAR2(30) NOT NULL,                    -- 주소
    EMAIL VARCHAR2(200) UNIQUE NOT NULL,                 -- 이메일
    PHONE VARCHAR2(20) NOT NULL,                         -- 전화번호
    TITLE VARCHAR2(150) NOT NULL,                        -- 문의제목
    CONTENT VARCHAR2(300) NOT NULL,                      -- 문의내용
    STATUS VARCHAR2(1) DEFAULT 'B' NOT NULL              -- 상태 (승인 / 반려) 승인시 Y 로 바뀌고, 반려시 N 으로 업데이트
);

CREATE TABLE STORE(
    STORE_ID VARCHAR2(15) PRIMARY KEY NOT NULL,          -- 아이디
    STORE_PWD VARCHAR2(15) NOT NULL,                     -- 비밀번호
    STORE_NAME VARCHAR2(30) NOT NULL,                    -- 가맹점명
    ADDRESS VARCHAR2(200) NOT NULL,                      -- 점주이름 
    STATUS VARCHAR2(1) DEFAULT 'Y' NOT NULL,             -- 상태 (승인시 Y로 인서트, 폐점처리시 N로 업데이트)
    -- 외래키
    ENR_NO NUMBER NOT NULL,
    FOREIGN KEY(ENR_NO) REFERENCES ENROLL(ENR_NO) ON DELETE CASCADE  -- 가맹번호
);

CREATE TABLE INGREDIENT(
    ING_NO NUMBER PRIMARY KEY NOT NULL,       -- 원재료번호
    ING_NAME VARCHAR2(30) NOT NULL,           -- 원재료명
    PRICE NUMBER NOT NULL,                  -- 원재료 가격
    EXPIRATION NUMBER NOT NULL,             -- 유통기한 
    ING_TYPE VARCHAR2(10) NOT NULL            -- 원재료 종류
);      

CREATE TABLE MENU(
    MEN_NO NUMBER PRIMARY KEY NOT NULL,                     -- 메뉴번호
    MEN_NAME VARCHAR2(50) NOT NULL,             -- 메뉴이름 
    PRICE NUMBER NOT NULL,                       -- 메뉴가격
    STATUS VARCHAR2(1) DEFAULT 'Y' NOT NULL                  -- 상태(판매여부)
);

CREATE TABLE COMBINATION(
    COM_NO NUMBER PRIMARY KEY NOT NULL,  -- 조합 번호
    -- 외래키
    MEN_NO NUMBER NOT NULL,                        -- 메뉴번호
    FOREIGN KEY (MEN_NO) REFERENCES MENU(MEN_NO) ON DELETE CASCADE, 
    ING_NO NUMBER NOT NULL,                           -- 원재료번호
    FOREIGN KEY (ING_NO) REFERENCES INGREDIENT(ING_NO) ON DELETE CASCADE
);

CREATE TABLE INDENT(
    IND_NO NUMBER PRIMARY KEY NOT NULL,
    COUNT NUMBER  NOT NULL,
    IND_DATE DATE DEFAULT SYSDATE NOT NULL,
    TOTAL NUMBER NOT NULL,
    STATUS VARCHAR2(1) DEFAULT 'B' NOT NULL, -- B > Y or N, AB > AY or N
    STORE_ID VARCHAR2(15),
    FOREIGN KEY (STORE_ID) REFERENCES STORE(STORE_ID) ON DELETE CASCADE,
    ING_NO NUMBER,
    FOREIGN KEY (ING_NO) REFERENCES INGREDIENT(ING_NO) ON DELETE CASCADE
);

CREATE TABLE STOCK (
    STO_NO NUMBER PRIMARY KEY NOT NULL,
    STO_DATE DATE DEFAULT SYSDATE NOT NULL,
    COUNT NUMBER NOT NULL,
    STATUS VARCHAR2(1) DEFAULT 'O' NOT NULL ,
    -- 외래키
    STORE_ID VARCHAR2(15) NOT NULL,
    FOREIGN KEY (STORE_ID) REFERENCES STORE(STORE_ID) ON DELETE CASCADE,
    ING_NO NUMBER NOT NULL,
    FOREIGN KEY (ING_NO) REFERENCES INGREDIENT(ING_NO) ON DELETE CASCADE
);

CREATE TABLE FLOW(
    FLO_NO NUMBER NOT NULL,
    COUNT NUMBER NOT NULL,
    FLO_DATE DATE DEFAULT SYSDATE NOT NULL,
    STATUS VARCHAR2(1) NOT NULL, -- I O
    -- 외래키
    STORE_ID VARCHAR2(15) NOT NULL,
    FOREIGN KEY (STORE_ID) REFERENCES STORE(STORE_ID) ON DELETE CASCADE,
    ING_NO NUMBER NOT NULL,
    FOREIGN KEY (ING_NO) REFERENCES INGREDIENT(ING_NO)ON DELETE CASCADE 
);  

CREATE TABLE SALES (
    SAL_NO NUMBER NOT NULL PRIMARY KEY,
    SAL_DATE DATE DEFAULT SYSDATE NOT NULL,
    COUNT NUMBER NOT NULL,
    TOTAL NUMBER NOT NULL,
    -- 외래키
    STORE_ID VARCHAR2(15) NOT NULL, 
    FOREIGN KEY (STORE_ID) REFERENCES STORE(STORE_ID) ON DELETE CASCADE,
    MEN_NO NUMBER NOT NULL,
    FOREIGN KEY (MEN_NO) REFERENCES MENU(MEN_NO)
);

CREATE TABLE PAYMENT(
    PAY_NO NUMBER PRIMARY KEY NOT NULL,
    DEPOSIT NUMBER NOT NULL,
    WITHDRAW NUMBER NOT NULL,
    PAY_DATE DATE NOT NULL,
    -- 외래키
    STORE_ID VARCHAR2(15) NOT NULL,
    FOREIGN KEY(STORE_ID) REFERENCES STORE(STORE_ID)
);

CREATE TABLE INQUERY(
    INQ_NO NUMBER NOT NULL,
    INQ_TITLE VARCHAR2(150) NOT NULL,
    INQ_DATE DATE DEFAULT SYSDATE NOT NULL,
    INQ_QUERY VARCHAR2(3000) NOT NULL,
    INQ_ANSWER VARCHAR2(3000) NOT NULL,
    STATUS VARCHAR2(1) NOT NULL,
    ANS_DATE DATE NOT NULL,
    CATEGORY VARCHAR2(30) NOT NULL,
    -- 외래키
    STORE_ID VARCHAR2(15) NOT NULL,
    FOREIGN KEY(STORE_ID) REFERENCES STORE(STORE_ID) 
);




COMMIT;


