<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="seinMapper">
	
	<resultMap type="order" id="OrderResultSet">
		<result column="IND_NO" property="indNo"/>
		<result column="COUNT" property="count"/>
		<result column="IND_DATE" property="indDate"/>
		<result column="TOTAL" property="total"/>
		<result column="STATUS" property="status"/>
		<result column="STORE_ID" property="storeId"/>
		<result column="ING_NO" property="ingNo"/>
		<result column="ING_NAME" property="ingName"/>
		<result column="ING_TYPE" property="ingType"/>
		<result column="PRICE" property="price"/>
		<result column="ROWNUM" property="rowNo"/>
		<result column="IND" property="indD"/>
		<result column="BAL" property="bal"/>
		<result column="'B'" property="b"/>
		<result column="'V'" property="v"/>
		<result column="'C'" property="c"/>
		<result column="'M'" property="m"/>
		<result column="'S'" property="s"/>
	</resultMap>
	
	
	<resultMap type="store" id="StoreResultSet">
		<result column="STORE_ID" property="storeId"/>
		<result column="STORE_PWD" property="storePwd"/>
		<result column="STORE_NAME" property="storeName"/>
		<result column="ADDRESS" property="address"/>
		<result column="STATUS" property="status"/>
		<result column="ENR_NO" property="enrNo"/>
	</resultMap>
		
	<resultMap type="enroll" id="EnrollResultSet">
		<result column="ENR_NO" property="enrNo"/>
		<result column="STORE_NAME" property="storeName"/>
		<result column="ENROLL_ADD" property="enrollAdd"/>
		<result column="EMAIL" property="email"/>
		<result column="PHONE" property="phone"/>
		<result column="TITLE" property="title"/>
		<result column="CONTENT" property="content"/>
		<result column="STATUS" property="status"/>
	</resultMap>
	
	<resultMap type="payment" id="PaymentResultSet">
		<result column="PAY_NO" property="payNo"/>
		<result column="DEPOSIT" property="deposit"/>
		<result column="WITHDRAW" property="withdraw"/>
		<result column="BAL" property="bal"/>		
		<result column="PAY_DATE" property="payDate"/>
		<result column="STORE_ID" property="storeId"/>
	</resultMap>

	<!-- 로그인 -->
	<select id="loginStore" parameterType="store" resultMap="StoreResultSet">
		SELECT STORE_ID, STORE_PWD, STORE_NAME, ADDRESS, STATUS, ENR_NO
		FROM STORE 
		WHERE STORE_ID = #{storeId} AND
		STATUS = 'Y'
	</select>
	
	<!-- 비밀번호 변경 update -->	
	<update id="newPwdUpdate" parameterType="order">
		UPDATE STORE SET STORE_PWD = #{storePwd} 
					 WHERE STORE_ID = #{storeId} 
					 AND STATUS = 'Y'    
	</update>
	
	<!-- 발주 체크 select -->
	<select id="selectOrder" parameterType="string" resultType="_int">
		SELECT COUNT(IND_NO)
		FROM INDENT
		WHERE STORE_ID = #{storeId} AND
		TO_NUMBER(TO_CHAR(IND_DATE, 'YYMMDDHH24MMSS')) = TO_NUMBER((TO_CHAR(SYSDATE, 'YYMMDD') || 150000))
	</select>
	
	<!-- 발주insert -->
	<insert id="insertOrder" parameterType="order">
		INSERT INTO INDENT(IND_NO, 
                    		COUNT, 
                    		IND_DATE, 
                    		TOTAL, 
                    		STATUS,
                    		STORE_ID,
                    		ING_NO)  
					VALUES(SEQ_INDENTNO.NEXTVAL, 
						 #{count}, 
						 SYSDATE, 
						 #{total}, 
						 #{status}, 
						 #{storeId}, 
						 #{ingNo})
	</insert>
	
	<!-- 발주상세조회 select -->
	<select id="selectTodayOrder" parameterType="string" resultMap="OrderResultSet">
		SELECT I.IND_NO, I.COUNT, I.IND_DATE, I.TOTAL, 
		I.STATUS, I.STORE_ID, G.ING_NO, G.ING_NAME, G.ING_TYPE, P.BAL
		FROM INDENT I, INGREDIENT G, (SELECT NVL(SUM(DEPOSIT+WITHDRAW),0) AS BAL, STORE_ID
                                        FROM PAYMENT 
                                        WHERE STORE_ID = #{storeId}
                                        GROUP BY STORE_ID) P
		WHERE I.ING_NO = G.ING_NO AND 
		I.STORE_ID = P.STORE_ID AND 
        I.STORE_ID = #{storeId} AND
		TO_CHAR(I.IND_DATE, 'YY-MM-DD') = TO_CHAR(SYSDATE, 'YY-MM-DD') AND
		STATUS LIKE '%B'
		ORDER BY I.ING_NO ASC
	</select>

	<!-- 발주전체조회 select -->
	<select id="selectAllOrderList" parameterType="string" resultMap="OrderResultSet">
		SELECT ROWNUM, B.*
		FROM(SELECT H.*
				FROM(SELECT * 
						FROM(SELECT IND_DATE, COUNT, ING_TYPE, STORE_ID, STATUS
						     FROM(SELECT TO_DATE(IND_DATE, 'YY-MM-DD') IND_DATE,
						                TO_CHAR(TO_DATE(IND_DATE, 'YYYY-MM-DD') - INTERVAL '1' DAY, 'YY-MM-DD') || ' '|| 15 B, 
						                TO_CHAR(IND_DATE, 'YY-MM-DD') || ' ' || 15 C, 
						                COUNT, 
						                ING_TYPE,
						                STORE_ID, 
						                STATUS
						         FROM INDENT I, INGREDIENT G
						         WHERE STORE_ID = #{storeId} AND 
						              I.ING_NO = G.ING_NO
						         ORDER BY IND_DATE DESC) 
				WHERE IND_DATE BETWEEN TO_DATE(B, 'YY-MM-DD HH24') AND TO_DATE(C, 'YY-MM-DD HH24'))
				PIVOT (SUM(COUNT) FOR ING_TYPE IN('B', 'V', 'M', 'C', 'S'))) H
				ORDER BY IND_DATE ASC)B
		ORDER BY ROWNUM DESC
	</select>
	
	
	<!-- 자동발주신청 select -->
	<select id="selectAutoOrder" resultMap="OrderResultSet">
	    SELECT IND_NO, COUNT, TOTAL, STATUS, STORE_ID, ING_NO
		FROM INDENT
		WHERE TO_NUMBER(TO_CHAR(IND_DATE, 'YYMMDDHH24MMSS')) 
		BETWEEN 
		TO_NUMBER((TO_CHAR(SYSDATE-2, 'YYMMDD') || 150000))
		AND 
		TO_NUMBER((TO_CHAR(SYSDATE-1, 'YYMMDD') || 149999)) AND
		STATUS = 'AY'
	</select>
	
	<!-- 가맹점 발주대기 상태의 원재료 list select -->
	<select id="selectOrder2" parameterType="string" resultMap="OrderResultSet">
		SELECT IND_NO, COUNT, IND_DATE, TOTAL, STATUS, STORE_ID, ING_NO, ING_NAME, PRICE, ING_TYPE
		FROM INDENT JOIN INGREDIENT USING(ING_NO) 
		WHERE STORE_ID = #{storeId} AND 
		      TO_CHAR(IND_DATE, 'YY-MM-DD') = TO_CHAR(SYSDATE, 'YY-MM-DD') AND 
		      STATUS LIKE '%B' 
		ORDER BY ING_NO
	</select>
	
	<!-- 가맹점 발주내역 수정 update -->
	<update id="updateOrder" parameterType="order">
		UPDATE INDENT SET COUNT =  #{count}, IND_DATE = #{inDate}, TOTAL =  #{total}, ING_NO = #{ingNo}
		WHERE STORE_ID = #{storeId} AND
        ING_NO = #{ingNo} AND 
        STATUS LIKE '%B'
	</update>
	
	<!-- 가맹신청 내역 조회 -->
	<select id="selectEnrollInfo" parameterType="_int" resultMap="EnrollResultSet">
		SELECT ENR_NO, STORE_NAME, ENROLL_ADD, EMAIL, PHONE, TITLE, CONTENT, STATUS 
		FROM ENROLL 
		WHERE ENR_NO = #{enrNo} 
		AND STATUS='Y' 
	</select>
	
	
	<!-- 가맹점 현재 잔액조회 -->
	<select id="todayMyPayment" parameterType="String" resultType="_int">
		SELECT NVL(SUM(NVL(DEPOSIT,0) + NVL(WITHDRAW,0)),0) BAL 
		FROM PAYMENT 
		WHERE STORE_ID = #{storeId}
	</select>
	
	<!-- 가맹점 현재 payment행조회 -->
	<select id="myPayment" parameterType="String" resultType="_int">
		SELECT COUNT(*) FROM PAYMENT WHERE STORE_ID = #{storeId}
	</select>
	
	<!-- 가맹점 리스트 count -->
	<select id="selectListCount" parameterType="String" resultType="_int">
		SELECT COUNT(*) 
		FROM (SELECT SUBSTR(IND_DATE, 1, 10) 
				FROM INDENT 
				WHERE STORE_ID = #{storeId} 
				GROUP BY SUBSTR(IND_DATE, 1, 10))
	</select>

	<!-- 가맹점 발주 수정 시 현재 잔액 조회 -->
	<select id="selectBeforeChangeIngre" parameterType="order" resultType="_int">
		<if test='ingType == "B"'>
			SELECT SUM(V+C+S+M) AS CHANGE
		</if>
		<if test='ingType == "V"'>
			SELECT SUM(B+C+S+M) AS CHANGE
		</if>
		<if test='ingType == "C"'>
			SELECT SUM(V+B+S+M) AS CHANGE
		</if>
		<if test='ingType == "M"'>
			SELECT SUM(V+C+S+B) AS CHANGE
		</if>
		<if test='ingType == "S"'>
			SELECT SUM(V+C+B+M) AS CHANGE
		</if>
			FROM(SELECT * 
				    FROM(SELECT ING_TYPE, TOTAL 
				            FROM INDENT I, INGREDIENT G
				            WHERE I.ING_NO = G.ING_NO AND
				            STORE_ID = #{storeId} AND
				            STATUS LIKE '%B')
				    PIVOT (SUM(TOTAL) FOR ING_TYPE IN('B' AS B, 'V' AS V, 'M' AS M, 'C' AS C, 'S' AS S)))
	</select>
	
	<!-- 가맹점 발주 수정 시 전체 count 조회 -->
	<select id="balanceCount" parameterType="order" resultType="_int">
		<if test='ingType == "B"'>
			SELECT SUM(V+C+S+M) AS CHANGE
		</if>
		<if test='ingType == "V"'>
			SELECT SUM(B+C+S+M) AS CHANGE
		</if>
		<if test='ingType == "C"'>
			SELECT SUM(V+B+S+M) AS CHANGE
		</if>
		<if test='ingType == "M"'>
			SELECT SUM(V+C+S+B) AS CHANGE
		</if>
		<if test='ingType == "S"'>
			SELECT SUM(V+C+B+M) AS CHANGE
		</if>
			FROM(SELECT * 
				    FROM(SELECT ING_TYPE, COUNT 
				            FROM INDENT I, INGREDIENT G
				            WHERE I.ING_NO = G.ING_NO AND
				            STORE_ID = #{storeId} AND
				            STATUS LIKE '%B')
				    PIVOT (SUM(COUNT) FOR ING_TYPE IN('B' AS B, 'V' AS V, 'M' AS M, 'C' AS C, 'S' AS S)))
	</select>
	
	<!-- 가맹점 발주 리스트 승인된 행 발주내역 상세조회 -->
	<select id="selectOrderResult" parameterType="order" resultMap="OrderResultSet">
		SELECT I.IND_NO, I.COUNT, I.IND_DATE, I.TOTAL, 
		I.STATUS, I.STORE_ID, G.ING_NO, G.ING_NAME, G.ING_TYPE, P.BAL
		FROM INDENT I, INGREDIENT G, (SELECT NVL(SUM(DEPOSIT+WITHDRAW),0) AS BAL, STORE_ID
                                        FROM PAYMENT 
                                        WHERE STORE_ID = #{storeId}
                                        GROUP BY STORE_ID) P
		WHERE I.ING_NO = G.ING_NO AND 
		I.STORE_ID = P.STORE_ID AND 
        I.STORE_ID = #{storeId} AND
		TO_DATE(I.IND_DATE, 'YY-MM-DD') = TO_DATE(#{inDate}, 'YY-MM-DD') AND
		STATUS = 'Y' OR STATUS ='AY' OR STATUS ='N' AND
		ORDER BY I.ING_NO ASC
	</select>
</mapper>
