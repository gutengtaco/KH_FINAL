<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="hyunsikMapper">

	<resultMap id="indentResultSet" type="com.s5.sand5rang.hyunsik.vo.Indent">
		<result column="IND_NO" property="indNo" />
		<result column="COUNT" property="count" />
		<result column="IND_DATE" property="date" />
		<result column="TOTAL" property="total" />
		<result column="STATUS" property="status" />
		<result column="STORE_ID" property="storeId" />
		<result column="ING_NO" property="ingNo" />
		<result column="STORE_NAME" property="storeName" />
	</resultMap>
	
	<resultMap id="paymentResultSet" type="com.s5.sand5rang.hyunsik.vo.Payment">
		<result column="PAY_NO" property="payNo" />
		<result column="DEPOSIT" property="deposit" />
		<result column="WITHDRAW" property="withdraw" />
		<result column="TOTAL" property="total" />
		<result column="PAY_DATE" property="date" />
		<result column="STORE_ID" property="storeId" />
		<result column="STORE_NAME" property="storeName" />
		<result column="EMAIL" property="email" />
	</resultMap>

	<select id="ad1ListCount" resultType="_int">
		SELECT COUNT(*)
		  FROM
		(SELECT STORE_ID, ROW_NUMBER() OVER(PARTITION BY STORE_ID ORDER BY IND_NO DESC) AS rn
		FROM INDENT 
		WHERE (STATUS = 'B' OR STATUS = 'AB') AND
		TO_NUMBER(TO_CHAR(IND_DATE, 'YYMMDDHH24MMSS')) 
		BETWEEN 
		(CASE WHEN TO_NUMBER(TO_CHAR(SYSDATE, 'HH24MMSS')) <![CDATA[<]]> 150000 THEN TO_NUMBER((TO_CHAR(SYSDATE-1, 'YYMMDD') || 150000))
		ELSE TO_NUMBER((TO_CHAR(SYSDATE, 'YYMMDD') || 150000)) END)
		AND 
		(CASE WHEN TO_NUMBER(TO_CHAR(SYSDATE, 'HH24MMSS')) <![CDATA[<]]> 150000 THEN TO_NUMBER((TO_CHAR(SYSDATE, 'YYMMDD') || 149999))
		ELSE TO_NUMBER((TO_CHAR(SYSDATE+1, 'YYMMDD') || 149999)) END)
		ORDER BY IND_NO DESC)
		 WHERE rn = 1
	</select>
	
  	<select id="selectAd1List" resultType="string">
		SELECT STORE_ID
		  FROM
		(SELECT STORE_ID, ROW_NUMBER() OVER(PARTITION BY STORE_ID ORDER BY IND_NO DESC) AS rn
		FROM INDENT 
		WHERE (STATUS = 'B' OR STATUS = 'AB') AND
		TO_NUMBER(TO_CHAR(IND_DATE, 'YYMMDDHH24MMSS')) 
		BETWEEN 
		(CASE WHEN TO_NUMBER(TO_CHAR(SYSDATE, 'HH24MMSS')) <![CDATA[<]]> 150000 THEN TO_NUMBER((TO_CHAR(SYSDATE-1, 'YYMMDD') || 150000))
		ELSE TO_NUMBER((TO_CHAR(SYSDATE, 'YYMMDD') || 150000)) END)
		AND 
		(CASE WHEN TO_NUMBER(TO_CHAR(SYSDATE, 'HH24MMSS')) <![CDATA[<]]> 150000 THEN TO_NUMBER((TO_CHAR(SYSDATE, 'YYMMDD') || 149999))
		ELSE TO_NUMBER((TO_CHAR(SYSDATE+1, 'YYMMDD') || 149999)) END)
		ORDER BY IND_NO DESC)
		 WHERE rn = 1
  	</select>
  	
  	<select id="selectIndLIst" resultMap="indentResultSet" parameterType="string">
		SELECT IND_NO, COUNT, TO_CHAR(IND_DATE, 'YY.MM.DD') IND_DATE, TOTAL, I.STATUS, STORE_ID, ING_NO, STORE_NAME 
		FROM INDENT I
		JOIN STORE USING(STORE_ID)
		WHERE STORE_ID = #{id} AND
		(I.STATUS = 'B' OR I.STATUS = 'AB') AND
		TO_NUMBER(TO_CHAR(IND_DATE, 'YYMMDDHH24MMSS')) 
		BETWEEN 
		(CASE WHEN TO_NUMBER(TO_CHAR(SYSDATE, 'HH24MMSS')) <![CDATA[<]]> 150000 THEN TO_NUMBER((TO_CHAR(SYSDATE-1, 'YYMMDD') || 150000))
		ELSE TO_NUMBER((TO_CHAR(SYSDATE, 'YYMMDD') || 150000)) END)
		AND 
		(CASE WHEN TO_NUMBER(TO_CHAR(SYSDATE, 'HH24MMSS')) <![CDATA[<]]> 150000 THEN TO_NUMBER((TO_CHAR(SYSDATE, 'YYMMDD') || 149999))
		ELSE TO_NUMBER((TO_CHAR(SYSDATE+1, 'YYMMDD') || 149999)) END)
		ORDER BY IND_NO DESC
  	</select>
  	
  	<update id="adCusApp" parameterType="hashmap">
		UPDATE (
			SELECT I.STATUS
			FROM INDENT I
			JOIN STORE USING(STORE_ID)
			WHERE STORE_ID = #{storeId} AND
			(I.STATUS = 'B' OR I.STATUS = 'AB') AND
			TO_NUMBER(TO_CHAR(IND_DATE, 'YYMMDDHH24MMSS')) 
			BETWEEN 
			(CASE WHEN TO_NUMBER(TO_CHAR(SYSDATE, 'HH24MMSS')) <![CDATA[<]]> 150000 THEN TO_NUMBER((TO_CHAR(SYSDATE-1, 'YYMMDD') || 150000))
			ELSE TO_NUMBER((TO_CHAR(SYSDATE, 'YYMMDD') || 150000)) END)
			AND 
			(CASE WHEN TO_NUMBER(TO_CHAR(SYSDATE, 'HH24MMSS')) <![CDATA[<]]> 150000 THEN TO_NUMBER((TO_CHAR(SYSDATE, 'YYMMDD') || 149999))
			ELSE TO_NUMBER((TO_CHAR(SYSDATE+1, 'YYMMDD') || 149999)) END)
			ORDER BY IND_NO DESC
		)
		<if test='status=="B"'>
		SET STATUS = 'Y'
		</if>
		<if test='status=="AB"'>
		SET STATUS = 'AY'
		</if>
  	</update>
  	
  	<insert id="storePay" parameterType="string">
		INSERT INTO PAYMENT 
		VALUES( 
		SEQ_PAYNO.NEXTVAL, 
		0, 
		(SELECT -SUM(TOTAL)
		FROM INDENT I
		JOIN STORE USING(STORE_ID)
		WHERE STORE_ID = #{storeId} AND
		(I.STATUS = 'Y' OR I.STATUS = 'AY') AND
		TO_NUMBER(TO_CHAR(IND_DATE, 'YYMMDDHH24MMSS')) 
		BETWEEN 
		(CASE WHEN TO_NUMBER(TO_CHAR(SYSDATE, 'HH24MMSS')) <![CDATA[<]]> 150000 THEN TO_NUMBER((TO_CHAR(SYSDATE-1, 'YYMMDD') || 150000))
		ELSE TO_NUMBER((TO_CHAR(SYSDATE, 'YYMMDD') || 150000)) END)
		AND 
		(CASE WHEN TO_NUMBER(TO_CHAR(SYSDATE, 'HH24MMSS')) <![CDATA[<]]> 150000 THEN TO_NUMBER((TO_CHAR(SYSDATE, 'YYMMDD') || 149999))
		ELSE TO_NUMBER((TO_CHAR(SYSDATE+1, 'YYMMDD') || 149999)) END)), 
		SYSDATE, 
		#{storeId} 
		)
  	</insert>
  	
  	<update id="adCusDis" parameterType="string">
		UPDATE (
			SELECT I.STATUS
			FROM INDENT I
			JOIN STORE USING(STORE_ID)
			WHERE STORE_ID = #{storeId} AND
			(I.STATUS = 'B' OR I.STATUS = 'AB') AND
			TO_NUMBER(TO_CHAR(IND_DATE, 'YYMMDDHH24MMSS')) 
			BETWEEN 
			(CASE WHEN TO_NUMBER(TO_CHAR(SYSDATE, 'HH24MMSS')) <![CDATA[<]]> 150000 THEN TO_NUMBER((TO_CHAR(SYSDATE-1, 'YYMMDD') || 150000))
			ELSE TO_NUMBER((TO_CHAR(SYSDATE, 'YYMMDD') || 150000)) END)
			AND 
			(CASE WHEN TO_NUMBER(TO_CHAR(SYSDATE, 'HH24MMSS')) <![CDATA[<]]> 150000 THEN TO_NUMBER((TO_CHAR(SYSDATE, 'YYMMDD') || 149999))
			ELSE TO_NUMBER((TO_CHAR(SYSDATE+1, 'YYMMDD') || 149999)) END)
			ORDER BY IND_NO DESC
		)
		SET STATUS = 'N'
  	</update>
  	
  	<update id="disAll">
		UPDATE
		(SELECT STATUS
		FROM INDENT
		WHERE STATUS = 'B' OR STATUS = 'AB')
		SET STATUS = 'N'
  	</update>
  	
  	<insert id="facInd" parameterType="_int">
		INSERT INTO FACTORY 
		VALUES( 
		SEQ_FACNO.NEXTVAL, 
		(SELECT NVL(SUM(COUNT), 0)  
		FROM INDENT 
		WHERE 
		ING_NO = #{i} AND 
		(STATUS = 'Y' OR STATUS = 'AY') AND 
		TO_NUMBER(TO_CHAR(IND_DATE, 'YYMMDDHH24MMSS')) 
		BETWEEN 
		TO_NUMBER((TO_CHAR(SYSDATE-1, 'YYMMDD') || 150000)) 
		AND 
		TO_NUMBER((TO_CHAR(SYSDATE, 'YYMMDD') || 149999))), 
		SYSDATE, 
		#{i} 
		)
  	</insert>
  	
  	<select id="storeInList" resultMap="indentResultSet">
		SELECT IND_NO, COUNT, TO_CHAR(IND_DATE, 'YY.MM.DD') IND_DATE, TOTAL, I.STATUS, STORE_ID, ING_NO, STORE_NAME 
		FROM INDENT I
		JOIN STORE USING(STORE_ID)
		WHERE 
		(I.STATUS = 'Y' OR I.STATUS = 'AY') AND
		TO_NUMBER(TO_CHAR(IND_DATE, 'YYMMDDHH24MMSS')) 
		BETWEEN 
		TO_NUMBER((TO_CHAR(SYSDATE-2, 'YYMMDD') || 150000))
		AND 
		TO_NUMBER((TO_CHAR(SYSDATE-1, 'YYMMDD') || 149999))
		ORDER BY IND_NO DESC
  	</select>
  	
  	<insert id="addStock" parameterType="com.s5.sand5rang.hyunsik.vo.Indent">
		INSERT INTO STOCK 
		VALUES( 
		SEQ_STOCKNO.NEXTVAL, 
		SYSDATE, 
		#{count}, 
		DEFAULT, 
		#{storeId}, 
		#{ingNo}) 
  	</insert>
  	
  	<insert id="addFlow" parameterType="com.s5.sand5rang.hyunsik.vo.Indent">
		INSERT INTO FLOW 
		VALUES( 
		SEQ_FLOWNO.NEXTVAL, 
		#{count}, 
		SYSDATE, 
		'I', 
		#{storeId}, 
		#{ingNo}) 
  	</insert>
  	
  	<select id="facListCount" resultType="_int">
		SELECT COUNT(*)
		FROM (SELECT ROW_NUMBER() OVER(PARTITION BY TO_CHAR(FAC_DATE, 'YYMMDD') ORDER BY FAC_NO DESC) AS rn, FAC_DATE, FAC_NO
		      FROM FACTORY)
		WHERE rn = 1
		ORDER BY FAC_NO
  	</select>
  	
  	<select id="selectAd2List" resultType="string">
		SELECT TO_CHAR(FAC_DATE, 'YY.MM.DD') 
		FROM (SELECT ROW_NUMBER() OVER(PARTITION BY TO_CHAR(FAC_DATE, 'YYMMDD') ORDER BY FAC_NO DESC) AS rn, FAC_DATE, FAC_NO 
		      FROM FACTORY) 
		WHERE rn = 1 
		ORDER BY FAC_NO 
  	</select>
  	
  	<select id="facIndList" resultMap="indentResultSet" parameterType="string">
		SELECT COUNT, TO_CHAR(FAC_DATE, 'YY.MM.DD') IND_DATE, ING_NO 
		FROM FACTORY 
		WHERE TO_CHAR(FAC_DATE, 'YY.MM.DD') = #{date} 
		ORDER BY ING_NO 
  	</select>
  	
  	<select id="payListCount" resultType="_int">
  		SELECT COUNT(*) 
  		FROM PAYMENT 
  	</select>
  	
  	<select id="paymentList" resultMap="paymentResultSet">
		SELECT PAY_NO, DEPOSIT, -WITHDRAW WITHDRAW, TO_CHAR(PAY_DATE, 'YY.MM.DD') PAY_DATE, STORE_ID, S.STORE_NAME, EMAIL 
		FROM PAYMENT
		JOIN STORE S USING(STORE_ID)
		JOIN ENROLL USING(ENR_NO)
		ORDER BY PAY_NO DESC 
  	</select>
  	
  	<select id="realPayList" resultType="_int" parameterType="com.s5.sand5rang.hyunsik.vo.Payment">
		SELECT SUM(DEPOSIT)+SUM(WITHDRAW) 
		FROM PAYMENT 
		JOIN STORE USING(STORE_ID) 
		WHERE PAY_NO <![CDATA[<]]>= #{payNo} AND STORE_ID = #{storeId} 
		ORDER BY PAY_NO DESC 
  	</select>

</mapper>
