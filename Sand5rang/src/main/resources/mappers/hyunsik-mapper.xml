<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="hyunsikMapper">

	<resultMap id="indentResultSet" type="com.s5.sand5rang.hyunsik.vo.Indent">
		<result column="IND_NO" property="indNo" />
		<result column="COUNT" property="count" />
		<result column="IND_DATE" property="date" />
		<result column="TOTAL" property="total" />
		<result column="STATUS" property="status" />
		<result column="STORE_ID" property="storeId" />
		<result column="ING_NO" property="ingNo" />
		<result column="STORE_NAME" property="storeName" />
	</resultMap>
	
	<resultMap id="paymentResultSet" type="com.s5.sand5rang.hyunsik.vo.Payment">
		<result column="PAY_NO" property="payNo" />
		<result column="DEPOSIT" property="deposit" />
		<result column="WITHDRAW" property="withdraw" />
		<result column="TOTAL" property="total" />
		<result column="PAY_DATE" property="date" />
		<result column="STORE_ID" property="storeId" />
		<result column="STORE_NAME" property="storeName" />
		<result column="EMAIL" property="email" />
	</resultMap>
	
	<resultMap id="stockFResultSet" type="com.s5.sand5rang.hyunsik.vo.StockF">
		<result column="STORE_ID" property="storeId" />
		<result column="ING_NO" property="ingNo" />
		<result column="TOTAL" property="total" />
		<result column="TYPE" property="type" />
		<result column="FINDEX" property="index" />
		<result column="B" property="b" />
		<result column="V" property="v" />
		<result column="C" property="c" />
		<result column="M" property="m" />
		<result column="S" property="s" />
		<result column="FDATE" property="date" />
	</resultMap>
	
	<resultMap id="mainResultSet" type="com.s5.sand5rang.hyunsik.vo.Main">
		<result column="ADIND" property="adInd" />
		<result column="ADFAC" property="adFac" />
		<result column="ADENR" property="adEnr" />
		<result column="ADINQ" property="adInq" />
		<result column="FRIND" property="frInd" />
		<result column="FRFAC" property="frFac" />
		<result column="FRPAY" property="frPay" />
		<result column="FRINQ" property="frInq" />
	</resultMap>
	
	<resultMap id="chartResultSet" type="com.s5.sand5rang.hyunsik.vo.Chart">
		<result column="DAY1" property="day1" />
		<result column="DAY2" property="day2" />
		<result column="DAY3" property="day3" />
		<result column="DAY4" property="day4" />
		<result column="DAY5" property="day5" />
		<result column="DAY6" property="day6" />
		<result column="DAY7" property="day7" />
		<result column="COUNT1" property="count1" />
		<result column="COUNT2" property="count2" />
		<result column="COUNT3" property="count3" />
		<result column="COUNT4" property="count4" />
		<result column="COUNT5" property="count5" />
		<result column="COUNT6" property="count6" />
		<result column="COUNT7" property="count7" />
	</resultMap>

	<select id="ad1ListCount" resultType="_int">
		SELECT COUNT(*)
		  FROM
		(SELECT STORE_ID, ROW_NUMBER() OVER(PARTITION BY STORE_ID ORDER BY IND_NO DESC) AS rn
		FROM INDENT 
		WHERE (STATUS = 'B' OR STATUS = 'AB') AND
		TO_NUMBER(TO_CHAR(IND_DATE, 'YYMMDDHH24MMSS')) 
		BETWEEN 
		(CASE WHEN TO_NUMBER(TO_CHAR(SYSDATE, 'HH24MMSS')) <![CDATA[<]]> 150000 THEN TO_NUMBER((TO_CHAR(SYSDATE-1, 'YYMMDD') || 150000))
		ELSE TO_NUMBER((TO_CHAR(SYSDATE, 'YYMMDD') || 150000)) END)
		AND 
		(CASE WHEN TO_NUMBER(TO_CHAR(SYSDATE, 'HH24MMSS')) <![CDATA[<]]> 150000 THEN TO_NUMBER((TO_CHAR(SYSDATE, 'YYMMDD') || 149999))
		ELSE TO_NUMBER((TO_CHAR(SYSDATE+1, 'YYMMDD') || 149999)) END)
		ORDER BY IND_NO DESC)
		 WHERE rn = 1
	</select>
	
  	<select id="selectAd1List" resultType="string">
		SELECT STORE_ID
		  FROM
		(SELECT STORE_ID, ROW_NUMBER() OVER(PARTITION BY STORE_ID ORDER BY IND_NO DESC) AS rn
		FROM INDENT 
		WHERE (STATUS = 'B' OR STATUS = 'AB') AND
		TO_NUMBER(TO_CHAR(IND_DATE, 'YYMMDDHH24MMSS')) 
		BETWEEN 
		(CASE WHEN TO_NUMBER(TO_CHAR(SYSDATE, 'HH24MMSS')) <![CDATA[<]]> 150000 THEN TO_NUMBER((TO_CHAR(SYSDATE-1, 'YYMMDD') || 150000))
		ELSE TO_NUMBER((TO_CHAR(SYSDATE, 'YYMMDD') || 150000)) END)
		AND 
		(CASE WHEN TO_NUMBER(TO_CHAR(SYSDATE, 'HH24MMSS')) <![CDATA[<]]> 150000 THEN TO_NUMBER((TO_CHAR(SYSDATE, 'YYMMDD') || 149999))
		ELSE TO_NUMBER((TO_CHAR(SYSDATE+1, 'YYMMDD') || 149999)) END)
		ORDER BY IND_NO DESC)
		 WHERE rn = 1
  	</select>
  	
  	<select id="selectIndLIst" resultMap="indentResultSet" parameterType="string">
		SELECT IND_NO, COUNT, TO_CHAR(IND_DATE, 'YY.MM.DD') IND_DATE, TOTAL, I.STATUS, STORE_ID, ING_NO, STORE_NAME 
		FROM INDENT I
		JOIN STORE USING(STORE_ID)
		WHERE STORE_ID = #{id} AND
		(I.STATUS = 'B' OR I.STATUS = 'AB') AND
		TO_NUMBER(TO_CHAR(IND_DATE, 'YYMMDDHH24MMSS')) 
		BETWEEN 
		(CASE WHEN TO_NUMBER(TO_CHAR(SYSDATE, 'HH24MMSS')) <![CDATA[<]]> 150000 THEN TO_NUMBER((TO_CHAR(SYSDATE-1, 'YYMMDD') || 150000))
		ELSE TO_NUMBER((TO_CHAR(SYSDATE, 'YYMMDD') || 150000)) END)
		AND 
		(CASE WHEN TO_NUMBER(TO_CHAR(SYSDATE, 'HH24MMSS')) <![CDATA[<]]> 150000 THEN TO_NUMBER((TO_CHAR(SYSDATE, 'YYMMDD') || 149999))
		ELSE TO_NUMBER((TO_CHAR(SYSDATE+1, 'YYMMDD') || 149999)) END)
		ORDER BY IND_NO DESC
  	</select>
  	
  	<update id="adCusApp" parameterType="hashmap">
		UPDATE (
			SELECT I.STATUS
			FROM INDENT I
			JOIN STORE USING(STORE_ID)
			WHERE STORE_ID = #{storeId} AND
			(I.STATUS = 'B' OR I.STATUS = 'AB') AND
			TO_NUMBER(TO_CHAR(IND_DATE, 'YYMMDDHH24MMSS')) 
			BETWEEN 
			(CASE WHEN TO_NUMBER(TO_CHAR(SYSDATE, 'HH24MMSS')) <![CDATA[<]]> 150000 THEN TO_NUMBER((TO_CHAR(SYSDATE-1, 'YYMMDD') || 150000))
			ELSE TO_NUMBER((TO_CHAR(SYSDATE, 'YYMMDD') || 150000)) END)
			AND 
			(CASE WHEN TO_NUMBER(TO_CHAR(SYSDATE, 'HH24MMSS')) <![CDATA[<]]> 150000 THEN TO_NUMBER((TO_CHAR(SYSDATE, 'YYMMDD') || 149999))
			ELSE TO_NUMBER((TO_CHAR(SYSDATE+1, 'YYMMDD') || 149999)) END)
			ORDER BY IND_NO DESC
		)
		<if test='status=="B"'>
		SET STATUS = 'Y'
		</if>
		<if test='status=="AB"'>
		SET STATUS = 'AY'
		</if>
  	</update>
  	
  	<insert id="storePay" parameterType="string">
		INSERT INTO PAYMENT 
		VALUES( 
		SEQ_PAYNO.NEXTVAL, 
		0, 
		(SELECT -SUM(TOTAL)
		FROM INDENT I
		JOIN STORE USING(STORE_ID)
		WHERE STORE_ID = #{storeId} AND
		(I.STATUS = 'Y' OR I.STATUS = 'AY') AND
		TO_NUMBER(TO_CHAR(IND_DATE, 'YYMMDDHH24MMSS')) 
		BETWEEN 
		(CASE WHEN TO_NUMBER(TO_CHAR(SYSDATE, 'HH24MMSS')) <![CDATA[<]]> 150000 THEN TO_NUMBER((TO_CHAR(SYSDATE-1, 'YYMMDD') || 150000))
		ELSE TO_NUMBER((TO_CHAR(SYSDATE, 'YYMMDD') || 150000)) END)
		AND 
		(CASE WHEN TO_NUMBER(TO_CHAR(SYSDATE, 'HH24MMSS')) <![CDATA[<]]> 150000 THEN TO_NUMBER((TO_CHAR(SYSDATE, 'YYMMDD') || 149999))
		ELSE TO_NUMBER((TO_CHAR(SYSDATE+1, 'YYMMDD') || 149999)) END)), 
		SYSDATE, 
		#{storeId} 
		)
  	</insert>
  	
  	<update id="adCusDis" parameterType="string">
		UPDATE (
			SELECT I.STATUS
			FROM INDENT I
			JOIN STORE USING(STORE_ID)
			WHERE STORE_ID = #{storeId} AND
			(I.STATUS = 'B' OR I.STATUS = 'AB') AND
			TO_NUMBER(TO_CHAR(IND_DATE, 'YYMMDDHH24MMSS')) 
			BETWEEN 
			(CASE WHEN TO_NUMBER(TO_CHAR(SYSDATE, 'HH24MMSS')) <![CDATA[<]]> 150000 THEN TO_NUMBER((TO_CHAR(SYSDATE-1, 'YYMMDD') || 150000))
			ELSE TO_NUMBER((TO_CHAR(SYSDATE, 'YYMMDD') || 150000)) END)
			AND 
			(CASE WHEN TO_NUMBER(TO_CHAR(SYSDATE, 'HH24MMSS')) <![CDATA[<]]> 150000 THEN TO_NUMBER((TO_CHAR(SYSDATE, 'YYMMDD') || 149999))
			ELSE TO_NUMBER((TO_CHAR(SYSDATE+1, 'YYMMDD') || 149999)) END)
			ORDER BY IND_NO DESC
		)
		SET STATUS = 'N'
  	</update>
  	
  	<update id="disAll">
		UPDATE
		(SELECT STATUS
		FROM INDENT
		WHERE STATUS = 'B' OR STATUS = 'AB')
		SET STATUS = 'N'
  	</update>
  	
  	<insert id="facInd" parameterType="_int">
		INSERT INTO FACTORY 
		VALUES( 
		SEQ_FACNO.NEXTVAL, 
		(SELECT NVL(SUM(COUNT), 0)  
		FROM INDENT 
		WHERE 
		ING_NO = #{i} AND 
		(STATUS = 'Y' OR STATUS = 'AY') AND 
		TO_NUMBER(TO_CHAR(IND_DATE, 'YYMMDDHH24MMSS')) 
		BETWEEN 
		TO_NUMBER((TO_CHAR(SYSDATE-1, 'YYMMDD') || 150000)) 
		AND 
		TO_NUMBER((TO_CHAR(SYSDATE, 'YYMMDD') || 149999))), 
		SYSDATE, 
		#{i} 
		)
  	</insert>
  	
  	<select id="storeInList" resultMap="indentResultSet">
		SELECT IND_NO, COUNT, TO_CHAR(IND_DATE, 'YY.MM.DD') IND_DATE, TOTAL, I.STATUS, STORE_ID, ING_NO, STORE_NAME 
		FROM INDENT I
		JOIN STORE USING(STORE_ID)
		WHERE 
		(I.STATUS = 'Y' OR I.STATUS = 'AY') AND
		TO_NUMBER(TO_CHAR(IND_DATE, 'YYMMDDHH24MMSS')) 
		BETWEEN 
		TO_NUMBER((TO_CHAR(SYSDATE-2, 'YYMMDD') || 150000))
		AND 
		TO_NUMBER((TO_CHAR(SYSDATE-1, 'YYMMDD') || 149999))
		ORDER BY IND_NO DESC
  	</select>
  	
  	<insert id="addStock" parameterType="com.s5.sand5rang.hyunsik.vo.Indent">
		INSERT INTO STOCK 
		VALUES( 
		SEQ_STOCKNO.NEXTVAL, 
		SYSDATE, 
		#{count}, 
		DEFAULT, 
		#{storeId}, 
		#{ingNo}) 
  	</insert>
  	
  	<insert id="addFlow" parameterType="com.s5.sand5rang.hyunsik.vo.Indent">
		INSERT INTO FLOW 
		VALUES( 
		SEQ_FLOWNO.NEXTVAL, 
		#{count}, 
		SYSDATE, 
		'I', 
		#{storeId}, 
		#{ingNo}) 
  	</insert>
  	
  	<select id="facListCount" resultType="_int">
		SELECT COUNT(*)
		FROM (SELECT ROW_NUMBER() OVER(PARTITION BY TO_CHAR(FAC_DATE, 'YYMMDD') ORDER BY FAC_NO DESC) AS rn, FAC_DATE, FAC_NO
		      FROM FACTORY)
		WHERE rn = 1
		ORDER BY FAC_NO
  	</select>
  	
  	<select id="selectAd2List" resultType="string">
		SELECT TO_CHAR(FAC_DATE, 'YY.MM.DD') 
		FROM (SELECT ROW_NUMBER() OVER(PARTITION BY TO_CHAR(FAC_DATE, 'YYMMDD') ORDER BY FAC_NO DESC) AS rn, FAC_DATE, FAC_NO 
		      FROM FACTORY) 
		WHERE rn = 1 
		ORDER BY FAC_NO 
  	</select>
  	
  	<select id="facIndList" resultMap="indentResultSet" parameterType="string">
		SELECT COUNT, TO_CHAR(FAC_DATE, 'YY.MM.DD') IND_DATE, ING_NO 
		FROM FACTORY 
		WHERE TO_CHAR(FAC_DATE, 'YY.MM.DD') = #{date} 
		ORDER BY ING_NO 
  	</select>
  	
  	<select id="payListCount" resultType="_int">
  		SELECT COUNT(*) 
  		FROM PAYMENT 
  	</select>
  	
  	<select id="paymentList" resultMap="paymentResultSet">
		SELECT PAY_NO, DEPOSIT, -WITHDRAW WITHDRAW, TO_CHAR(PAY_DATE, 'YY.MM.DD') PAY_DATE, STORE_ID, S.STORE_NAME, EMAIL 
		FROM PAYMENT
		JOIN STORE S USING(STORE_ID)
		JOIN ENROLL USING(ENR_NO)
		ORDER BY PAY_NO DESC 
  	</select>
  	
  	<select id="realPayList" resultType="_int" parameterType="com.s5.sand5rang.hyunsik.vo.Payment">
		SELECT SUM(DEPOSIT)+SUM(WITHDRAW) 
		FROM PAYMENT 
		JOIN STORE USING(STORE_ID) 
		WHERE PAY_NO <![CDATA[<]]>= #{payNo} AND STORE_ID = #{storeId} 
		ORDER BY PAY_NO DESC 
  	</select>
  	
  	<select id="getMyStock" resultType="_int" parameterType="com.s5.sand5rang.hyunsik.vo.StockF">
		SELECT NVL(SUM(COUNT), 0) 
		FROM STOCK 
		JOIN INGREDIENT USING(ING_NO) 
		WHERE 
		STORE_ID = #{storeId} AND ( 
		TO_NUMBER(TO_CHAR(STO_DATE, 'YYMMDD')) 
		BETWEEN 
		TO_NUMBER(TO_CHAR(SYSDATE-#{index}, 'YYMMDD')) 
		AND 
		TO_NUMBER(TO_CHAR(SYSDATE, 'YYMMDD')) 
		) 
		AND 
		ING_TYPE = #{type} 
  	</select>
  	
  	<select id="endFlowDate" parameterType="string" resultType="_int">
		SELECT NVL(AVG(FDATE), 0) 
		FROM (SELECT TO_NUMBER(TO_CHAR(FLO_DATE, 'YYMMDD')) FDATE, ROW_NUMBER() OVER(PARTITION BY STORE_ID ORDER BY FLO_DATE ASC) AS RN
		FROM FLOW
		WHERE STORE_ID = #{storeId}
		ORDER BY FLO_DATE ASC)
		WHERE RN = 1
  	</select>
  	
  	<select id="indexList" parameterType="_int" resultMap="stockFResultSet">
		SELECT TRUNC((LEVEL-1)/2) FINDEX 
		FROM DUAL 
		CONNECT BY LEVEL <![CDATA[<]]>= #{index} 
		ORDER BY LEVEL ASC 
  	</select>
  	
  	<select id="flowList" parameterType="com.s5.sand5rang.hyunsik.vo.StockF" resultMap="stockFResultSet">
		SELECT 
		(SELECT NVL(SUM(COUNT), 0)
		FROM FLOW F
		JOIN INGREDIENT USING(ING_NO)
		WHERE
		TO_CHAR(FLO_DATE, 'YYDDMM') = TO_CHAR(SYSDATE-#{index}, 'YYDDMM') AND 
		ING_TYPE = 'B' AND 
		F.STORE_ID = #{storeId} AND 
		F.STATUS = #{io}) AS B, 
		(SELECT NVL(SUM(COUNT), 0)
		FROM FLOW F
		JOIN INGREDIENT USING(ING_NO)
		WHERE
		TO_CHAR(FLO_DATE, 'YYDDMM') = TO_CHAR(SYSDATE-#{index}, 'YYDDMM') AND 
		ING_TYPE = 'V' AND 
		F.STORE_ID = #{storeId} AND 
		F.STATUS = #{io}) AS V,
		(SELECT NVL(SUM(COUNT), 0)
		FROM FLOW F
		JOIN INGREDIENT USING(ING_NO)
		WHERE
		TO_CHAR(FLO_DATE, 'YYDDMM') = TO_CHAR(SYSDATE-#{index}, 'YYDDMM') AND 
		ING_TYPE = 'M' AND 
		F.STORE_ID = #{storeId} AND 
		F.STATUS = #{io}) AS M, 
		(SELECT NVL(SUM(COUNT), 0)
		FROM FLOW F
		JOIN INGREDIENT USING(ING_NO)
		WHERE
		TO_CHAR(FLO_DATE, 'YYDDMM') = TO_CHAR(SYSDATE-#{index}, 'YYDDMM') AND 
		ING_TYPE = 'C' AND 
		F.STORE_ID = #{storeId} AND 
		F.STATUS = #{io}) AS C, 
		(SELECT NVL(SUM(COUNT), 0)
		FROM FLOW F
		JOIN INGREDIENT USING(ING_NO)
		WHERE
		TO_CHAR(FLO_DATE, 'YYDDMM') = TO_CHAR(SYSDATE-#{index}, 'YYDDMM') AND 
		ING_TYPE = 'S' AND 
		F.STORE_ID = #{storeId} AND 
		F.STATUS = #{io}) AS S, TO_CHAR(SYSDATE-#{index}, 'YY.MM.DD') FDATE 
		FROM DUAL
  	</select>
  	
  	<select id="befIndent" resultMap="mainResultSet">
		SELECT
		(SELECT COUNT(*)
		FROM INDENT
		WHERE STATUS = 'AB' OR STATUS = 'B') ADIND, 
		(SELECT NVL(SUM(COUNT), 0)
		FROM FACTORY
		WHERE 
		TO_CHAR(FAC_DATE, 'YYMMDD') = TO_CHAR(SYSDATE-1, 'YYMMDD')) ADFAC, 
		(SELECT COUNT(*)
		FROM ENROLL
		WHERE STATUS = 'B') ADENR, 
		(SELECT COUNT(*)
		FROM INQUERY
		WHERE STATUS = 'N') ADINQ
		FROM DUAL
  	</select>
  	
  	<select id="befIndent2" resultMap="mainResultSet" parameterType="string">
		SELECT
		(SELECT COUNT(*)
		FROM INDENT
		WHERE (STATUS = 'AB' OR STATUS = 'B') AND STORE_ID = #{storeId}) FRIND, 
		(SELECT NVL(SUM(COUNT), 0)
		FROM INDENT
		WHERE (STATUS = 'AY' OR STATUS = 'Y') AND STORE_ID = #{storeId} AND 
		TO_NUMBER(TO_CHAR(IND_DATE, 'YYMMDDHH24MMSS')) 
		BETWEEN 
		TO_NUMBER((TO_CHAR(SYSDATE-2, 'YYMMDD') || 150000))
		AND 
		TO_NUMBER((TO_CHAR(SYSDATE-1, 'YYMMDD') || 149999))) FRFAC, 
		(SELECT NVL((SUM(DEPOSIT)+SUM(WITHDRAW)), 0) 
		FROM PAYMENT 
		JOIN STORE USING(STORE_ID) 
		WHERE STORE_ID = #{storeId}) FRPAY, 
		(SELECT COUNT(*)
		FROM INQUERY
		WHERE STORE_ID = #{storeId}) FRINQ
		FROM DUAL
  	</select>
  	
  	
  	<select id="payListCount2" resultType="_int" parameterType="string">
  		SELECT COUNT(*) 
  		FROM PAYMENT 
  		WHERE STORE_ID = #{storeId} 
  	</select>
  	
  	<select id="paymentList2" resultMap="paymentResultSet" parameterType="string">
		SELECT PAY_NO, DEPOSIT, -WITHDRAW WITHDRAW, TO_CHAR(PAY_DATE, 'YY.MM.DD') PAY_DATE, STORE_ID, S.STORE_NAME, EMAIL 
		FROM PAYMENT
		JOIN STORE S USING(STORE_ID)
		JOIN ENROLL USING(ENR_NO)
		WHERE STORE_ID = #{storeId} 
		ORDER BY PAY_NO DESC 
  	</select>
  	
  	<select id="realPayList2" resultType="_int" parameterType="com.s5.sand5rang.hyunsik.vo.Payment">
		SELECT SUM(DEPOSIT)+SUM(WITHDRAW) 
		FROM PAYMENT 
		JOIN STORE USING(STORE_ID) 
		WHERE PAY_NO <![CDATA[<]]>= #{payNo} AND STORE_ID = #{storeId} 
		ORDER BY PAY_NO DESC 
  	</select>
  	
  	<select id="getChart" resultMap="chartResultSet">
		SELECT TO_CHAR(SYSDATE-1, 'MM/DD') DAY1, TO_CHAR(SYSDATE-2, 'MM/DD') DAY2, TO_CHAR(SYSDATE-3, 'MM/DD') DAY3, TO_CHAR(SYSDATE-4, 'MM/DD') DAY4, TO_CHAR(SYSDATE-5, 'MM/DD') DAY5, TO_CHAR(SYSDATE-6, 'MM/DD') DAY6, TO_CHAR(SYSDATE-7, 'MM/DD') DAY7, 
		(SELECT NVL(SUM(TOTAL), 0)
		FROM SALES
		WHERE TO_CHAR(SAL_DATE, 'YYMMDD')=TO_CHAR(SYSDATE-1, 'YYMMDD')) COUNT1, 
		(SELECT NVL(SUM(TOTAL), 0)
		FROM SALES
		WHERE TO_CHAR(SAL_DATE, 'YYMMDD')=TO_CHAR(SYSDATE-2, 'YYMMDD')) COUNT2, 
		(SELECT NVL(SUM(TOTAL), 0)
		FROM SALES
		WHERE TO_CHAR(SAL_DATE, 'YYMMDD')=TO_CHAR(SYSDATE-3, 'YYMMDD')) COUNT3, 
		(SELECT NVL(SUM(TOTAL), 0)
		FROM SALES
		WHERE TO_CHAR(SAL_DATE, 'YYMMDD')=TO_CHAR(SYSDATE-4, 'YYMMDD')) COUNT4, 
		(SELECT NVL(SUM(TOTAL), 0)
		FROM SALES
		WHERE TO_CHAR(SAL_DATE, 'YYMMDD')=TO_CHAR(SYSDATE-5, 'YYMMDD')) COUNT5, 
		(SELECT NVL(SUM(TOTAL), 0)
		FROM SALES
		WHERE TO_CHAR(SAL_DATE, 'YYMMDD')=TO_CHAR(SYSDATE-6, 'YYMMDD')) COUNT6, 
		(SELECT NVL(SUM(TOTAL), 0)
		FROM SALES
		WHERE TO_CHAR(SAL_DATE, 'YYMMDD')=TO_CHAR(SYSDATE-7, 'YYMMDD')) COUNT7
		FROM DUAL
  	</select>
  	
  	<select id="getChart2" resultMap="chartResultSet">
		SELECT TO_CHAR(SYSDATE-1, 'MM/DD') DAY1, TO_CHAR(SYSDATE-2, 'MM/DD') DAY2, TO_CHAR(SYSDATE-3, 'MM/DD') DAY3, TO_CHAR(SYSDATE-4, 'MM/DD') DAY4, TO_CHAR(SYSDATE-5, 'MM/DD') DAY5, TO_CHAR(SYSDATE-6, 'MM/DD') DAY6, TO_CHAR(SYSDATE-7, 'MM/DD') DAY7, 
		(SELECT NVL(SUM(TOTAL), 0)
		FROM SALES
		WHERE TO_CHAR(SAL_DATE, 'YYMMDD')=TO_CHAR(SYSDATE-1, 'YYMMDD') AND STORE_ID = #{storeId}) COUNT1, 
		(SELECT NVL(SUM(TOTAL), 0)
		FROM SALES
		WHERE TO_CHAR(SAL_DATE, 'YYMMDD')=TO_CHAR(SYSDATE-2, 'YYMMDD') AND STORE_ID = #{storeId}) COUNT2, 
		(SELECT NVL(SUM(TOTAL), 0)
		FROM SALES
		WHERE TO_CHAR(SAL_DATE, 'YYMMDD')=TO_CHAR(SYSDATE-3, 'YYMMDD') AND STORE_ID = #{storeId}) COUNT3, 
		(SELECT NVL(SUM(TOTAL), 0)
		FROM SALES
		WHERE TO_CHAR(SAL_DATE, 'YYMMDD')=TO_CHAR(SYSDATE-4, 'YYMMDD') AND STORE_ID = #{storeId}) COUNT4, 
		(SELECT NVL(SUM(TOTAL), 0)
		FROM SALES
		WHERE TO_CHAR(SAL_DATE, 'YYMMDD')=TO_CHAR(SYSDATE-5, 'YYMMDD') AND STORE_ID = #{storeId}) COUNT5, 
		(SELECT NVL(SUM(TOTAL), 0)
		FROM SALES
		WHERE TO_CHAR(SAL_DATE, 'YYMMDD')=TO_CHAR(SYSDATE-6, 'YYMMDD') AND STORE_ID = #{storeId}) COUNT6, 
		(SELECT NVL(SUM(TOTAL), 0)
		FROM SALES
		WHERE TO_CHAR(SAL_DATE, 'YYMMDD')=TO_CHAR(SYSDATE-7, 'YYMMDD') AND STORE_ID = #{storeId}) COUNT7
		FROM DUAL
  	</select>
  	

</mapper>
